{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "synapsejl"
		},
		"synapsejl-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'synapsejl-WorkspaceDefaultSqlServer'"
		},
		"JLKeyVault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://JLVault.vault.azure.net/"
		},
		"Source_DB_Ideo_properties_typeProperties_connectionString_secretName": {
			"type": "string",
			"defaultValue": "Ideo-ConnString"
		},
		"synapsejl-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://datalakejl.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/BussinesDW')]",
			"type": "Microsoft.Synapse/workspaces/sqlPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Initial Import')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Customers",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "Select IdTercero, T.Nombre, Nit, Z.IdZona,Z.Nombre as Zona, C.IdCiudad, C.Nombre as Ciudad\nFrom Tercero as T\nInner Join Zona as Z on T.IdZona = Z.IdZona\nInner Join Ciudad as C on C.IdCiudad = T.IdCiudad\nWhere EsCliente = 1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlPoolSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "IdTercero",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										},
										"sink": {
											"name": "CustomerId",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										}
									},
									{
										"source": {
											"name": "Nit",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "LegalCode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Nombre",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IdZona",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										},
										"sink": {
											"name": "ZoneCode",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										}
									},
									{
										"source": {
											"name": "Zona",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ZoneName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IdCiudad",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										},
										"sink": {
											"name": "CityCode",
											"type": "Guid",
											"physicalType": "uniqueidentifier"
										}
									},
									{
										"source": {
											"name": "Ciudad",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CityName",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Source_Dataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Dest_DW",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/Source_Dataset')]",
				"[concat(variables('workspaceId'), '/datasets/Dest_DW')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Dest_DW')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "SqlPoolTable",
				"schema": [
					{
						"name": "CustomerIdSNK",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerId",
						"type": "uniqueidentifier"
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "LegalCode",
						"type": "varchar"
					},
					{
						"name": "ZoneCode",
						"type": "uniqueidentifier"
					},
					{
						"name": "ZoneName",
						"type": "varchar"
					},
					{
						"name": "CityCode",
						"type": "uniqueidentifier"
					},
					{
						"name": "CityName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "BussinesCore",
					"table": "Customer"
				},
				"sqlPool": {
					"referenceName": "BussinesDW",
					"type": "SqlPoolReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/sqlPools/BussinesDW')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Source_Dataset')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Source_DB_Ideo",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/Source_DB_Ideo')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/JLKeyVault')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('JLKeyVault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Source_DB_Ideo')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "JLKeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('Source_DB_Ideo_properties_typeProperties_connectionString_secretName')]"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/linkedServices/JLKeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/synapsejl-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('synapsejl-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/synapsejl-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('synapsejl-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Schemas')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE SCHEMA [Staging]\n\nCREATE SCHEMA [BussinesCore]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "BussinesDW",
						"type": "SqlPool"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Table BussinesUnit')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "Create Table [BussinesCore].[BussinesUnit]\n(\n\tBussinesIdSNK int not null IDENTITY PRIMARY KEY NONCLUSTERED NOT ENFORCED, \n    Code varchar(50) not null,\n    [Name] varchar(50) not null,\n    ConnectionString varchar(200) not null\n)\nWith\n(\n\tDistribution = Replicate\n);\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "master",
						"type": "SqlOnDemand"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Table Customer')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "Create Table [Staging].[Customer]\n(\n\tCustomerId uniqueidentifier not null,\n\tBussinesId int not null,\n\t[Name] varchar(300) not null,\n\tLegalCode varchar(50) not null,\n\tZoneCode uniqueidentifier not null,\n\tZoneName varchar(50) not null,\n\tCityCode uniqueidentifier not null,\n\tCityName varchar(50) not null\n)\nWith\n(\n\tDistribution = Replicate\n);\n\n\nCreate Table [BussinesCore].[Customer]\n(\n\tCustomerIdSNK int not null IDENTITY PRIMARY KEY NONCLUSTERED NOT ENFORCED, \n\tBussinesId int not null,\n\tCustomerId uniqueidentifier not null,\n\t[Name] varchar(300) not null,\n\tLegalCode varchar(50) not null,\n\tZoneCode uniqueidentifier not null,\n\tZoneName varchar(50) not null,\n\tCityCode uniqueidentifier not null,\n\tCityName varchar(50) not null\n)\nWith\n(\n\tDistribution = Replicate\n)\n\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "BussinesDW",
						"type": "SqlPool"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/TransferCustomers')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"folder": {
					"name": "StoredProcedures"
				},
				"content": {
					"query": "CREATE PROCEDURE [BussinesCore].[TransferCustomers]\nAS\nBEGIN\n\n\tUPDATE T\n\t\tSET\n\t\t\tNAME = S.NAME,\n\t\t\tLegalCode = S.LegalCode,\n\t\t\tZoneCode = S.ZoneCode,\n\t\t\tZoneName = S.ZoneName,\n\t\t\tCityCode = S.CityCode,\n\t\t\tCityName = S.CityName\n\t\tFROM [BussinesCore].[Customer] AS T\n\t\tINNER JOIN [Staging].[Customer] AS S ON T.CustomerId = S.CustomerId AND T.BussinesId = S.BussinesId\n\n\tINSERT INTO [BussinesCore].[Customer]\n\t([BussinesId], [CustomerId], [Name], [LegalCode], [ZoneCode], [ZoneName], [CityCode], [CityName])\n\tSELECT [BussinesId], [CustomerId], [Name], [LegalCode], [ZoneCode], [ZoneName], [CityCode], [CityName]\n\tFROM [Staging].[Customer] AS S\n\tWHERE NOT EXISTS(\n\t\tSELECT T.CustomerId\n\t\tFROM [BussinesCore].[Customer] AS T\n\t\tWHERE T.CustomerId = S.CustomerId AND T.BussinesId = S.BussinesId\n\t)\n\n\t\n\nEND\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "master",
						"type": "SqlOnDemand"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		}
	]
}